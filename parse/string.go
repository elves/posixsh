// Code generated by "stringer -type=RedirMode,PrimaryType,DQSegmentType -output=string.go"; DO NOT EDIT.

package parse

import "strconv"

const _RedirMode_name = "RedirInvalidRedirInputRedirOutputRedirInputOutputRedirAppendRedirHeredoc"

var _RedirMode_index = [...]uint8{0, 12, 22, 33, 49, 60, 72}

func (i RedirMode) String() string {
	if i < 0 || i >= RedirMode(len(_RedirMode_index)-1) {
		return "RedirMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RedirMode_name[_RedirMode_index[i]:_RedirMode_index[i+1]]
}

const _PrimaryType_name = "InvalidPrimaryBarewordPrimarySingleQuotedPrimaryDoubleQuotedPrimaryWildcardCharPrimaryOutputCapturePrimaryVariablePrimary"

var _PrimaryType_index = [...]uint8{0, 14, 29, 48, 67, 86, 106, 121}

func (i PrimaryType) String() string {
	if i < 0 || i >= PrimaryType(len(_PrimaryType_index)-1) {
		return "PrimaryType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PrimaryType_name[_PrimaryType_index[i]:_PrimaryType_index[i+1]]
}

const _DQSegmentType_name = "DQInvalidSegmentDQStringSegmentDQExpansionSegment"

var _DQSegmentType_index = [...]uint8{0, 16, 31, 49}

func (i DQSegmentType) String() string {
	if i < 0 || i >= DQSegmentType(len(_DQSegmentType_index)-1) {
		return "DQSegmentType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DQSegmentType_name[_DQSegmentType_index[i]:_DQSegmentType_index[i+1]]
}
